

#merge two sorted linked list

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def mergeTwoLists(self, list1, list2):
        # Create a dummy node and a pointer to it
        dummy = ListNode()
        current = dummy

        # Pointers to traverse list1 and list2
        p1, p2 = list1, list2

        # Traverse both lists
        while p1 is not None and p2 is not None:
            if p1.val < p2.val:
                current.next = p1
                p1 = p1.next
            else:
                current.next = p2
                p2 = p2.next

            # Move the current pointer forward
            current = current.next

        # Handle remaining nodes in list1 or list2
        if p1 is not None:
            current.next = p1
        elif p2 is not None:
            current.next = p2

        # The merged list starts from dummy.next
        return dummy.next


# Example linked lists
list1 = ListNode(1, ListNode(2, ListNode(4)))
list2 = ListNode(1, ListNode(3, ListNode(4)))

# Merge the lists
result = Solution()
b = result.mergeTwoLists(list1, list2)

# Print the result
while b is not None:
    print(b.val, end=" ")
    b = b.next
